[Service]
HealthCheckInterval = "10s"
Host = "localhost"
Port = 59997
ServerBindAddr = ""
StartupMsg = "device opcua started"
MaxRequestSize = 0
RequestTimeout = "5s"

[Registry]
Host = "localhost"
Port = 8500
CheckInterval = "10s"
FailLimit = 3
FailWaitTime = 10
Type = "consul"

[Clients]
  [Clients.core-data]
  Protocol = "http"
  Host = "localhost"
  Port = 59880

  [Clients.core-metadata]
  Protocol = "http"
  Host = "localhost"
  Port = 59881

[MessageQueue]
Protocol = "redis"
Host = "localhost"
Port = 6379
Type = "redis"
AuthMode = "usernamepassword"  # required for redis messagebus (secure or insecure).
SecretName = "redisdb"
PublishTopicPrefix = "edgex/events/device" # /<device-profile-name>/<device-name>/<source-name> will be added to this Publish Topic prefix
  [MessageQueue.Optional]
  # Default MQTT Specific options that need to be here to enable environment variable overrides of them
  # Client Identifiers
  ClientId = "device-opcua"
  # Connection information
  Qos = "0" # Quality of Sevice values are 0 (At most once), 1 (At least once) or 2 (Exactly once)
  KeepAlive = "10" # Seconds (must be 2 or greater)
  Retained = "false"
  AutoReconnect = "true"
  ConnectTimeout = "5" # Seconds
  SkipCertVerify = "false" # Only used if Cert/Key file or Cert/Key PEMblock are specified  [MessageQueue.Optional]

[Device]
DataTransform = true
MaxCmdOps = 128
MaxCmdValueLen = 256
DevicesDir = "./res/devices"
ProfilesDir = "./res/profiles"
UpdateLastConnected = false
Labels = []
EnableAsyncReadings = true
AsyncBufferSize = 16
UseMessageBus = true

[SecretStore]
Type = "vault"
Host = "localhost"
Port = 8200
Path = "device-opcua/"
Protocol = "http"
RootCaCertPath = ""
ServerName = ""
TokenFile = "/tmp/edgex/secrets/device-opcua/secrets-token.json"
  [SecretStore.Authentication]
  AuthType = "X-Vault-Token"

[Writable]
LogLevel = "INFO"
  # InsecureSecrets are required for when Redis is used for message bus
  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
    path = "redisdb"
      [Writable.InsecureSecrets.DB.Secrets]
      username = ""
      password = ""
    [Writable.InsecureSecrets.OPCUA]
    path = "credentials"
      [Writable.InsecureSecrets.OPCUA.Secrets]
      username = "bTrace"
      password = "23556"

# Driver configs
[OPCUAServer]
DeviceName = "BA660_Simulation"  # Name of existing Device
Endpoint = "opc.tcp://10.249.81.40:4840"# endpoint of existing Device
Policy = "Basic256Sha256"                        # Security policy: None, Basic128Rsa15, Basic256, Basic256Sha256. Default: None
Mode = "SignAndEncrypt"                          # Security mode: None, Sign, SignAndEncrypt. Default: None
CredentialsRetryTime = 120 # Seconds
CredentialsRetryWait = 1 # Seconds
ConnEstablishingRetry = 10
ConnRetryWaitTime = 5
CredentialsPath = "credentials"
  [OPCUAServer.CertificateConfig]
  CertFile = "/res/certs/client-cert.pem"                           # Path to cert.pem. Required for security mode/policy != None , since we create the certificate with every connection there is no stored CertFile
  KeyFile = "/res/certs/client-key.pem"                            # Path to private key.pem. Required for security mode/policy != None, since we create the certificate with every connection there is no stored KeyFile
  CertOrganization = "Baader.com"
  CertCountry = "DE"
  CertProvince = "Hamburg"
  CertLocality = "Hamburg"
  CertCommonName = "urn:localhost"
  CertBits = 2048
  CertFilePermissions = "644" #root permissions for reading and writing the certificate and key files
  [OPCUAServer.Writable]
  # Device resources related to Node IDs to subscribe to (comma-separated values)
  Resources = "DeviceNumber,CurrentMachineSpeed,RequestedMachineSpeed,MachineState,ProductCounter"
